<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Markdown</title>
    <!-- libs -->
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css">
    <script src="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js"></script>

    <!-- Kentico Custom elements API-->
    <script src="https://app.kenticocloud.com/js-api/custom-element.js"></script>

    <!-- Custom elements styles -->
    <style>
        body {
            margin: 0;
            padding: 0;
            overflow: hidden;
        }
    </style>
</head>
<body>
<!-- Custom element Code, basic skelet taken from: https://github.com/Kentico/custom-element-samples/blob/master/Markdown/markdown.html -->
<div id="results">

</div>
<script type="text/javascript">
    console.nativeLog = console.log;
    /*console.log = value => {
        console.
    } console.log;*/;
    let render = document.getElementById('results');
    let counter = 0;

    let otherElementsCodeNames = [ "aasset", "date", "nmb", "sluggish", "richtext2", "text1" ];

    let debugString = "";

    function updateElements(elements) {
        debugString = "Updated elements: " + JSON.stringify(elements);
        render.innerText = debugString;
    }

    CustomElement.init((element, context) => {
        //let debugString = "{element.value: " + element.value + ", element.disabled: " + element.disabled + ", element.config: " + JSON.stringify(element.config) + "}, {context.projectId: " + context.projectId + ", context.item.id: " + context.item.id + ", context.item.codename: " + context.item.codename + ", context.variant.id: " + context.variant.id + ", context.variant.codename: " + context.variant.codename + "}";
        //render.innerText = debugString;
        
        setInterval(() => {
            render.innerText += counter;
            CustomElement.setValue(counter.toString());
            counter += 1;

            // Subscribe to content elements changes
            CustomElement.observeElementChanges(otherElementsCodeNames, (changedCodeNames) => {
                updateElements(changedCodeNames);
            });

        }, 1000);

    });

</script>
</body>
</html>